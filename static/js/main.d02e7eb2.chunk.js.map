{"version":3,"sources":["ErrorMessage.js","App.js","index.js"],"names":["ErrorMessage","message","className","xmlns","fill","viewBox","d","networks","polygon","chainId","Number","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","bsc","changeNetwork","networkName","setError","window","ethereum","Error","request","method","params","App","useState","error","handleNetworkSwitch","networkChanged","console","log","useEffect","on","removeListener","onClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0NAAe,SAASA,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAKA,EAGH,qBAAKC,UAAU,yBAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBACEC,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRH,UAAU,8BAJZ,SAME,sBACE,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACbI,EAAE,qGAGN,gCAAQL,SAlBO,IAsBtB,CCpBD,IAAMM,EAAW,CACfC,QAAS,CACPC,QAAQ,KAAD,OAAOC,OAAO,KAAKC,SAAS,KACnCC,UAAW,kBACXC,eAAgB,CACdC,KAAM,QACNC,OAAQ,QACRC,SAAU,IAEZC,QAAS,CAAC,4BACVC,kBAAmB,CAAC,6BAEtBC,IAAK,CACHV,QAAQ,KAAD,OAAOC,OAAO,IAAIC,SAAS,KAClCC,UAAW,8BACXC,eAAgB,CACdC,KAAM,6BACNC,OAAQ,MACRC,SAAU,IAEZC,QAAS,CACP,oCACA,oCACA,oCACA,oCACA,mCACA,mCACA,mCACA,mCACA,oCACA,oCACA,oCACA,oCACA,gCAEFC,kBAAmB,CAAC,yBAIlBE,EAAa,iDAAG,oGAASC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,SAAtB,SAEbC,OAAOC,SAFM,sBAEU,IAAIC,MAAM,0BAFpB,uBAGZF,OAAOC,SAASE,QAAQ,CAC5BC,OAAQ,0BACRC,OAAQ,CAAC,eAEFrB,EAASc,OAPA,uDAYlBC,EAAS,KAAIrB,SAZK,yDAAH,sDAgBJ,SAAS4B,IACtB,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcT,EAAd,KAEMU,EAAmB,iDAAG,WAAOX,GAAP,kFAC1BC,IAD0B,SAEpBF,EAAc,CAAEC,cAAaC,aAFT,2CAAH,sDAKnBW,EAAiB,SAACxB,GACtByB,QAAQC,IAAI,CAAE1B,WACf,EAUD,OARA2B,qBAAU,WAGR,OAFAb,OAAOC,SAASa,GAAG,eAAgBJ,GAE5B,WACLV,OAAOC,SAASc,eAAe,eAAgBL,EAChD,CACF,GAAE,IAGD,qBAAK/B,UAAU,8EAAf,SACE,uBAAMA,UAAU,WAAhB,UACE,oBAAIA,UAAU,kDAAd,oCAGA,sBAAKA,UAAU,OAAf,UACE,wBACEqC,QAAS,kBAAMP,EAAoB,UAA1B,EACT9B,UAAU,+EAFZ,+BAMA,wBACEqC,QAAS,kBAAMP,EAAoB,MAA1B,EACT9B,UAAU,6FAFZ,2BAMA,cAACF,EAAD,CAAcC,QAAS8B,WAKhC,CCjGD,IAAMS,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACf,EAAD,MAEFW,E","file":"static/js/main.d02e7eb2.chunk.js","sourcesContent":["export default function ErrorMessage({ message }) {\n  if (!message) return null;\n\n  return (\n    <div className=\"alert alert-error mt-5\">\n      <div className=\"flex-1\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          className=\"w-6 h-6 mx-2 stroke-current\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"\n          ></path>\n        </svg>\n        <label>{message}</label>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nconst networks = {\n  polygon: {\n    chainId: `0x${Number(137).toString(16)}`,\n    chainName: \"Polygon Mainnet\",\n    nativeCurrency: {\n      name: \"MATIC\",\n      symbol: \"MATIC\",\n      decimals: 18\n    },\n    rpcUrls: [\"https://polygon-rpc.com/\"],\n    blockExplorerUrls: [\"https://polygonscan.com/\"]\n  },\n  bsc: {\n    chainId: `0x${Number(56).toString(16)}`,\n    chainName: \"Binance Smart Chain Mainnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\n      \"https://bsc-dataseed1.binance.org\",\n      \"https://bsc-dataseed2.binance.org\",\n      \"https://bsc-dataseed3.binance.org\",\n      \"https://bsc-dataseed4.binance.org\",\n      \"https://bsc-dataseed1.defibit.io\",\n      \"https://bsc-dataseed2.defibit.io\",\n      \"https://bsc-dataseed3.defibit.io\",\n      \"https://bsc-dataseed4.defibit.io\",\n      \"https://bsc-dataseed1.ninicoin.io\",\n      \"https://bsc-dataseed2.ninicoin.io\",\n      \"https://bsc-dataseed3.ninicoin.io\",\n      \"https://bsc-dataseed4.ninicoin.io\",\n      \"wss://bsc-ws-node.nariox.org\"\n    ],\n    blockExplorerUrls: [\"https://bscscan.com\"]\n  }\n};\n\nconst changeNetwork = async ({ networkName, setError }) => {\n  try {\n    if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n    await window.ethereum.request({\n      method: \"wallet_addEthereumChain\",\n      params: [\n        {\n          ...networks[networkName]\n        }\n      ]\n    });\n  } catch (err) {\n    setError(err.message);\n  }\n};\n\nexport default function App() {\n  const [error, setError] = useState();\n\n  const handleNetworkSwitch = async (networkName) => {\n    setError();\n    await changeNetwork({ networkName, setError });\n  };\n\n  const networkChanged = (chainId) => {\n    console.log({ chainId });\n  };\n\n  useEffect(() => {\n    window.ethereum.on(\"chainChanged\", networkChanged);\n\n    return () => {\n      window.ethereum.removeListener(\"chainChanged\", networkChanged);\n    };\n  }, []);\n\n  return (\n    <div className=\"credit-card w-full lg:w-1/2 sm:w-auto shadow-lg mx-auto rounded-xl bg-white\">\n      <main className=\"mt-4 p-4\">\n        <h1 className=\"text-xl font-semibold text-gray-700 text-center\">\n          Force MetaMask network\n        </h1>\n        <div className=\"mt-4\">\n          <button\n            onClick={() => handleNetworkSwitch(\"polygon\")}\n            className=\"mt-2 mb-2 btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n          >\n            Switch to Polygon\n          </button>\n          <button\n            onClick={() => handleNetworkSwitch(\"bsc\")}\n            className=\"mt-2 mb-2 bg-warning border-warning btn submit-button focus:ring focus:outline-none w-full\"\n          >\n            Switch to BSC\n          </button>\n          <ErrorMessage message={error} />\n        </div>\n      </main>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}